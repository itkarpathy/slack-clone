{"version":3,"sources":["StateProvider.js","components/Header.js","firebase.js","components/SidebarOptions.js","components/Sidebar.js","components/Message.js","components/ChatInput.js","components/Chat.js","reducer.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","user","className","Avatar","src","photoURL","alt","dispalyName","type","placeholder","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarOptions","Icon","title","id","addChannelOption","history","useHistory","onClick","channelName","prompt","collection","add","name","push","Sidebar","useState","channels","setChannels","useEffect","onSnapshot","snapshot","docs","map","doc","data","displayName","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","channel","key","Message","message","timestamp","userImage","Date","toDate","toUTCString","ChatInput","channelId","input","setInput","onChange","e","target","toLowerCase","preventDefault","FieldValue","serverTimestamp","Chat","roomId","useParams","roomDetails","setRoomDetails","roomMessages","setRoomMessages","orderBy","console","log","room","actionTypes","state","action","Login","dispatch","Button","signInWithPopup","then","result","catch","error","alert","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2e0f6f8.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutlineOutlined\";\r\nimport \"./Header.css\";\r\nimport { useStateValue } from \"../StateProvider\";\r\n\r\nfunction Header() {\r\n  const [{ user }] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <Avatar\r\n          className=\"header__avatar\"\r\n          src={user?.photoURL}\r\n          alt={user?.dispalyName}\r\n        />\r\n        <AccessTimeIcon />\r\n      </div>\r\n      <div className=\"header__search\">\r\n        <SearchIcon className=\"header__search__icon\" />\r\n        <input type=\"text\" placeholder=\"Search your Slack\" />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <HelpOutlineIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC1YljNIUbFsnBh7jgmtx1dPv5MhwecaQc\",\r\n  authDomain: \"slack-app-60730.firebaseapp.com\",\r\n  databaseURL: \"https://slack-app-60730.firebaseio.com\",\r\n  projectId: \"slack-app-60730\",\r\n  storageBucket: \"slack-app-60730.appspot.com\",\r\n  messagingSenderId: \"417107913903\",\r\n  appId: \"1:417107913903:web:1908e673be87ccb70ab85a\",\r\n  measurementId: \"G-WXFSZWD8TD\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;\r\n","import React from \"react\";\r\nimport \"./SidebarOption.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport db from \"../firebase\";\r\n\r\nfunction SidebarOptions({ Icon, title, id, addChannelOption }) {\r\n  const history = useHistory();\r\n\r\n  const selectChannel = () => {\r\n    if (id) {\r\n      history.push(`/room/${id}`);\r\n    } else {\r\n      history.push(\"title\");\r\n    }\r\n  };\r\n\r\n  const addChannel = () => {\r\n    const channelName = prompt(\"Please enter the channel name:\");\r\n\r\n    if (channelName) {\r\n      db.collection(\"rooms\").add({\r\n        name: channelName,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"sidebarOption\"\r\n      onClick={addChannelOption ? addChannel : selectChannel}\r\n    >\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? (\r\n        <h3>{title}</h3>\r\n      ) : (\r\n        <h3 className=\"sidebarOption__channel\">\r\n          <span className=\"sidebarOption__hash\">#</span>\r\n          {title}\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOptions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport FiberManualRecorIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport SidebarOption from \"./SidebarOptions\";\r\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport db from \"../firebase\";\r\nimport { useStateValue } from \"../StateProvider\";\r\n\r\nfunction Sidebar() {\r\n  const [channels, setChannels] = useState([]);\r\n  const [{ user }] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    db.collection(\"rooms\").onSnapshot((snapshot) =>\r\n      setChannels(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          name: doc.data().name,\r\n        }))\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <div className=\"sidebar__info\">\r\n          <h2>Smart Developer</h2>\r\n          <h3>\r\n            <FiberManualRecorIcon />\r\n            {user?.displayName}\r\n          </h3>\r\n        </div>\r\n        <CreateIcon />\r\n      </div>\r\n      <SidebarOption Icon={InsertCommentIcon} title=\"Threads!\" />\r\n      <SidebarOption title=\"Youtube\" />\r\n      <SidebarOption Icon={InboxIcon} title=\"Mentions\" />\r\n      <SidebarOption Icon={DraftsIcon} title=\"Saved Items\" />\r\n      <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel Browser\" />\r\n      <SidebarOption Icon={PeopleAltIcon} title=\"People\" />\r\n      <SidebarOption Icon={AppsIcon} title=\"Apps\" />\r\n      <SidebarOption Icon={FileCopyIcon} title=\"File Browser\" />\r\n      <SidebarOption Icon={ExpandLessIcon} title=\"Show Less\" />\r\n      <hr />\r\n      <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\r\n      <hr />\r\n      <SidebarOption Icon={AddIcon} title=\"Add Channel\" addChannelOption />\r\n\r\n      {channels.map((channel) => (\r\n        <SidebarOption title={channel.name} id={channel.id} key={channel.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"./Message.css\";\r\n\r\nfunction Message({ message, timestamp, user, userImage }) {\r\n  return (\r\n    <div className=\"chat__message\">\r\n      <img src={userImage} alt=\"\" />\r\n      <div className=\"message__info\">\r\n        <h4>\r\n          {user}\r\n          <span className=\"message__timestamp\">\r\n            {new Date(timestamp?.toDate()).toUTCString()}\r\n          </span>\r\n        </h4>\r\n        <p>{message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useState } from \"react\";\r\nimport \"./ChatInput.css\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport firebase from \"firebase\";\r\nimport db from \"../firebase\";\r\n\r\nfunction ChatInput({ channelName, channelId }) {\r\n  const [input, setInput] = useState(\"\");\r\n  const [{ user }] = useStateValue();\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (channelId) {\r\n      db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\r\n        message: input,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        user: user.displayName,\r\n        userImage: user.photoURL,\r\n      });\r\n    }\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatInput\">\r\n      <form>\r\n        <input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          type=\"text\"\r\n          placeholder={`Message #${channelName?.toLowerCase()}`}\r\n        />\r\n        <button type=\"submit\" onClick={sendMessage}>\r\n          SEND\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport db from \"../firebase\";\r\nimport Message from \"../components/Message\";\r\nimport ChatInput from \"./ChatInput\";\r\n\r\nfunction Chat() {\r\n  const { roomId } = useParams();\r\n  const [roomDetails, setRoomDetails] = useState(null);\r\n  const [roomMessages, setRoomMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomDetails(snapshot.data()));\r\n    }\r\n\r\n    db.collection(\"rooms\")\r\n      .doc(roomId)\r\n      .collection(\"messages\")\r\n      .orderBy(\"timestamp\", \"asc\")\r\n      .onSnapshot((snapshot) =>\r\n        setRoomMessages(snapshot.docs.map((doc) => doc.data()))\r\n      );\r\n  }, [roomId]);\r\n\r\n  console.log(roomDetails);\r\n  console.log(roomMessages);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <div className=\"chat__headerLeft\">\r\n          <h4 className=\"chat__channelName\">\r\n            <strong>#{roomDetails?.name}</strong>\r\n            <StarBorderOutlinedIcon />\r\n          </h4>\r\n        </div>\r\n        <div className=\"chat__headerRight\">\r\n          <p>\r\n            <InfoOutlinedIcon /> Details\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat__messages\">\r\n        {roomMessages.map((room) => (\r\n          <Message\r\n            message={room.message}\r\n            timestamp={room.timestamp}\r\n            user={room.user}\r\n            userImage={room.userImage}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <ChatInput channelName={roomDetails?.name} channelId={roomId} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","export const initialState = {\r\n  user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n  SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { auth, provider } from \"../firebase\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { actionTypes } from \"../reducer\";\r\n\r\nfunction Login() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        console.log(result);\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: result.user,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <img\r\n          src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd-650-80.jpg.webp\"\r\n          alt=\"\"\r\n        />\r\n        <h1>Sign into Smart Dev Meets Up</h1>\r\n        <Button onClick={signIn}> Sign In width Google</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Chat from \"./components/Chat\";\nimport Login from \"./components/Login\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <>\n            <Header />\n\n            <div className=\"app__body\">\n              <Sidebar />\n\n              <Switch>\n                <Route path=\"/room/:roomId\">\n                  <Chat />\n                </Route>\n                <Route path=\"/\">\n                  <h1>Welcome</h1>\n                </Route>\n              </Switch>\n            </div>\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}